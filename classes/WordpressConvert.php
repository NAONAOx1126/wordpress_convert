<?php
/*
 * Copyright (C) 2012 NetLife Inc. All Rights Reserved.
 * http://www.netlife-web.com/
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

$settings = explode(",", WORDPRESS_CONVERT_SETTING_CLASSES);
foreach($settings as $setting){
	require_once(dirname(__FILE__)."/WordpressConvertSetting".$setting.".php");
}
require_once(dirname(__FILE__)."/".WORDPRESS_CONVERT_CONTENT_MANAGER.".php");
require_once(dirname(__FILE__)."/ContentConverter.php");
$cartridgeNames = explode(",", WORDPRESS_CONVERT_CARTRIDGES);
foreach($cartridgeNames as $cartridgeName){
	if(!empty($cartridgeName) && file_exists(dirname(__FILE__)."/cartridges/".$cartridgeName."Cartridge.php")){
		require_once(dirname(__FILE__)."/cartridges/".$cartridgeName."Cartridge.php");
	}
}

/**
 * HTMLをWordpressテンプレートに変換するプラグインのメインクラス
 *
 * @package WordpressConvert
 * @author Naohisa Minagawa
 * @version 1.0
 */
class WordpressConvert {
	/**
	 * Initial
	 * @return void
	 */
	public static function init(){
		// 環境のバージョンチェック
		if( version_compare( PHP_VERSION, '5.3.0', '<' ) )
			trigger_error( __("PHP 5.3 or later is required for this plugin."), E_USER_ERROR );
		
		// 初期化処理
		$settings = explode(",", WORDPRESS_CONVERT_SETTING_CLASSES);
		foreach($settings as $setting){
			add_action( 'admin_menu', array( "WordpressConvertSetting".$setting, 'init' ) );
		}
		
		// 初期表示のメニューを変更
		//if(empty($_GET["page"]) && preg_match("/\\/wp-admin\\//", $_SERVER["REQUEST_URI"]) > 0){
		//	wp_redirect(get_option('siteurl') . '/wp-admin/admin.php?page=wordpress_convert_menu');
		//}
	}
	
	/**
	 * 変換処理を必要に応じて実行する。
	 */
	public static function execute(){
		$contentManagerClass = WORDPRESS_CONVERT_CONTENT_MANAGER;
		$contentManager = new $contentManagerClass(get_option("wordpress_convert_ftp_login_id"), get_option("wordpress_convert_ftp_password"), get_option("wordpress_convert_base_dir"));
		
		if($contentManager->isAccessible()){
			// 共通スタイルの自動生成
			$filename = $contentManager->getContentHome()."/style.css";
			$themeFile = $contentManager->getThemeFile($filename);
			$info = pathinfo($themeFile);
			if(!is_dir($info["dirname"])){
				mkdir($info["dirname"], 0755, true);
			}
			if(($fp = fopen($themeFile, "w+")) !== FALSE){
				fwrite($fp, "/* \r\n");
				fwrite($fp, "Theme Name: ".WORDPRESS_CONVERT_THEME_NAME."\r\n");
				fwrite($fp, "Description: Converted Theme by Wordpress Converter\r\n");
				fwrite($fp, "Author: NetLife Inc.\r\n");
				fwrite($fp, "Author URI: http://www.netlife-web.com/\r\n");
				fwrite($fp, "Version: 1.0\r\n");
				fwrite($fp, "\r\n");
				fwrite($fp, "This themes was generated by Wordpress Converter Plugin.\r\n");
				fwrite($fp, "Theme can not use except for servers which we select.\r\n");
				fwrite($fp, "In case, theme uses others, you may spent extra fee.\r\n");
				fwrite($fp, "\r\n");
				fwrite($fp, "*/\r\n");
				fclose($fp);
			}
			
			// アップされたテンプレートファイルを変換ルールに基づいて変換する。
			$files = $contentManager->getList();
			$converter = new ContentConverter();
			$cartridgeNames = explode(",", WORDPRESS_CONVERT_CARTRIDGES);
			foreach($cartridgeNames as $cartridgeName){
				if(!empty($cartridgeName) && class_exists($cartridgeName."Cartridge")){
					$className = $cartridgeName."Cartridge";
					$converter->addCartridge(new $className());
				}
			}
			$pageids = get_all_page_ids();
			foreach($pageids as $pageid){
				$code = get_post_meta($pageid, "_wp_page_code", true);
				if(!empty($code)){
					$converter->addPage($code, $pageid);
				}
			}
			// ページデータは事前に作成する。
			foreach($files as $filename){
				if(preg_match("/\\.html?$/i", $filename) > 0){
					$baseFileName = str_replace($contentManager->getContentHome(), "", $filename);
					switch($baseFileName){
						// 標準のファイルは固定ページテンプレートとして扱わない
						case "index.html":
						case "404.html":
						case "search.html":
						case "archive.html":
						case "taxonomy.html":
						case "category.html":
						case "tag.html":
						case "author.html":
						case "single.html":
						case "attachment.html":
						case "single-post.html":
						case "page.html":
						case "home.html":
						case "comments-popup.html":
							break;
						// それ以外のページは固定ページテンプレートとして扱う
						default:
							$baseFileCode = preg_replace("/\\.html?$/i", "", $baseFileName);
							if(substr($baseFileCode, 0, 1) != "_"){
								$pageid = $converter->getPageId($baseFileCode);
								if(empty($pageid)){
									// ページIDが未登録の場合には、ページを新規登録
									$pageid = wp_insert_post(array(
										"post_title" => $baseFileCode,
										"post_status" => "publish",
										"post_name" => $baseFileCode,
										"post_type" => "page",
									));
									add_post_meta($pageid, "_wp_page_template", $baseFileCode.".php", true);
									add_post_meta($pageid, "_wp_page_code", $baseFileCode, true);
									$converter->addPage($baseFileCode, $pageid);
								}
							}
							break;
					}
				}
			}
			foreach($files as $filename){
				if($contentManager->isUpdated($filename)){
					$themeFile = $contentManager->getThemeFile($filename);
					$info = pathinfo($themeFile);
					if(!is_dir($info["dirname"])){
						mkdir($info["dirname"], 0755, true);
					}
					if(($fp = fopen($themeFile, "w+")) !== FALSE){
						$content = $contentManager->getContent($filename);
						if(preg_match("/\\.html?$/i", $filename) > 0){
							$baseFileName = str_replace($contentManager->getContentHome(), "", $filename);
							switch($baseFileName){
								// 標準のファイルは固定ページテンプレートとして扱わない
								case "index.html":
								case "404.html":
								case "search.html":
								case "archive.html":
								case "taxonomy.html":
								case "category.html":
								case "tag.html":
								case "author.html":
								case "single.html":
								case "attachment.html":
								case "single-post.html":
								case "page.html":
								case "home.html":
								case "comments-popup.html":
									break;
								// それ以外のページは固定ページテンプレートとして扱う
								default:
									$baseFileCode = preg_replace("/\\.html?$/i", "", $baseFileName);
									if(substr($baseFileCode, 0, 1) != "_"){
										fwrite($fp, "<?php\r\n");
										fwrite($fp, "/*\r\n");
										fwrite($fp, "Template Name: ".$baseFileCode."\r\n");
										fwrite($fp, "*/\r\n");
										fwrite($fp, "?>\r\n");
										$pageid = $converter->getPageId($baseFileCode);
										if(empty($pageid)){
											// ページIDが未登録の場合には、ページを新規登録
											$pageid = wp_insert_post(array(
												"post_title" => $baseFileCode,
												"post_status" => "publish",
												"post_name" => $baseFileCode,
												"post_type" => "page",
											));
											add_post_meta($pageid, "_wp_page_template", $baseFileCode.".php", true);
											add_post_meta($pageid, "_wp_page_code", $baseFileCode, true);
										}
									}
									break;
							}
							fwrite($fp, $converter->convert($content)->php());
						}elseif(preg_match("/\\.css$/i", $filename) > 0){
							$content = preg_replace("/url\\(([^\\)]+)\\)/", "url(".get_theme_root_uri()."/".WORDPRESS_CONVERT_THEME_NAME."/"."\$1)", $content);
							fwrite($fp, $content);
						}elseif(preg_match("/script\\.js$/i", $filename) > 0){
							$content = preg_replace("/bindobj\\.siteroot = ''/", "bindobj.siteroot = '".get_theme_root_uri()."/".WORDPRESS_CONVERT_THEME_NAME."/'", $content);
							$content = preg_replace("/bindobj\\.dir = ''/", "bindobj.dir = '".get_theme_root_uri()."/".WORDPRESS_CONVERT_THEME_NAME."/'", $content);
							fwrite($fp, $content);
						}else{
							fwrite($fp, $content);
						}
						fclose($fp);
					}
				}
			}
			
			// 共通関数プログラムの自動生成
			$filename = $contentManager->getContentHome()."/functions.php";
			$themeFile = $contentManager->getThemeFile($filename);
			$info = pathinfo($themeFile);
			if(!is_dir($info["dirname"])){
				mkdir($info["dirname"], 0755, true);
			}
			if(($fp = fopen($themeFile, "w+")) !== FALSE){
				fwrite($fp, "<?php\r\n");
				$menus = $converter->getNavMenus();
				if(is_array($menus) && !empty($menus)){
					fwrite($fp, "if(function_exists('register_nav_menus')){\r\n");
					fwrite($fp, "register_nav_menus(array(\r\n");
					foreach($menus as $id => $name){
						if(!empty($id) && !empty($name)){
							fwrite($fp, "'".$id."' => '".$name."',\r\n");
						}
					}
					fwrite($fp, "));\r\n");
					fwrite($fp, "}\r\n");
				}
				$widgets = $converter->getWidgets();
				if(is_array($widgets) && count($widgets) > 0){
					fwrite($fp, "if(function_exists('register_sidebar')){\r\n");
					foreach($widgets as $id => $name){
						fwrite($fp, "register_sidebar(array(");
						if(!empty($id)){
							fwrite($fp, "'id' => '".$id."', ");
						}
						if(!empty($name)){
							fwrite($fp, "'name' => '".$name."'");
						}
						fwrite($fp, "));\r\n");
					}
					fwrite($fp, "}\r\n");
				}
				fwrite($fp, "function eyecatch_setup() {\r\n");
				fwrite($fp, "add_theme_support( 'post-thumbnails' );\r\n");
				fwrite($fp, "}\r\n");
				fwrite($fp, "add_action( 'after_setup_theme', 'eyecatch_setup' );\r\n");
				fwrite($fp, "?>\r\n");
				fclose($fp);
			}
			
			// テンプレートのスクリーンショットファイルを
			$screenshotFile = $contentManager->getThemeFile($contentManager->getContentHome()."screenshot.png");
			if(file_exists($contentManager->getThemeFile($contentManager->getContentHome()."bdflashinfo/thumbnail.png"))){
				copy($contentManager->getThemeFile($contentManager->getContentHome()."bdflashinfo/thumbnail.png"), $screenshotFile);
			}elseif(file_exists($contentManager->getThemeFile($contentManager->getContentHome()."siteinfos/thumbnail.png"))){
				copy($contentManager->getThemeFile($contentManager->getContentHome()."siteinfos/thumbnail.png"), $screenshotFile);
			}
		}
	}

	function install(){
		// インストール時の処理
	}

	function uninstall(){
		// アンインストール時の処理
	}


}
?>